# syntax = docker/dockerfile:1

# Definir a versão do Ruby como um argumento
ARG RUBY_VERSION=3.4.4
FROM docker.io/library/ruby:$RUBY_VERSION-slim AS base

# Definir diretório de trabalho
WORKDIR /helpdesk

# Instalar pacotes base
RUN apt-get update -qq && \
    apt-get install --no-install-recommends -y \
    curl \
    libjemalloc2 \
    libvips \
    libyaml-dev \
    postgresql-client \
    build-essential \
    git \
    libpq-dev \
    pkg-config \
    rustc && \
    rm -rf /var/lib/apt/lists /var/cache/apt/archives

# Copiar Gemfile e Gemfile.lock
COPY Gemfile Gemfile.lock ./

# Instalar gems
RUN bundle install

# Copiar código da aplicação
COPY . .

# Criar pasta de PID
RUN mkdir -p tmp/pids

# Pré-compilar código para melhorar tempos de inicialização
RUN bundle exec bootsnap precompile app/ lib/

# Permissões de segurança para rodar como usuário não-root
RUN groupadd --system --gid 1000 rails && \
    useradd rails --uid 1000 --gid 1000 --create-home --shell /bin/bash && \
    chown -R rails:rails db log storage tmp

RUN mkdir -p /usr/local/bundle && \
    chown -R rails:rails /usr/local/bundle

USER 1000:1000

# Usar script de inicialização para preparar o banco de dados e servidor
ENTRYPOINT ["/helpdesk/bin/docker-entrypoint"]

# Expor porta 3000 para acessar o servidor Rails
EXPOSE 3000

# Definir o comando padrão para rodar o servidor Rails
CMD ["./bin/rails", "server", "-b", "0.0.0.0"]